<?xml version="1.0" encoding="UTF-8"?>
<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN" "http://mybatis.org/dtd/mybatis-3-mapper.dtd">
<mapper namespace="com.jy.repository.oa.overtime.OvertimeDao">
	<!-- com.jy.entity.oa.overtime.Overtime  -->
 	<resultMap id="base" type="Overtime" ></resultMap>
 	<select id="find"  resultMap="base" parameterType="Overtime">
       SELECT t.* FROM OA_OVERTIME t WHERE 1=1
       <if test="id != null and id!='' ">
        	AND t.id=#{id}
       </if>
		<if test="pid != null and pid!='' ">
			AND t.pId=#{pid}
		</if>
    </select>
 	<select id="findByPage"  resultMap="base" parameterType="Overtime">
       SELECT t.* FROM OA_OVERTIME t WHERE 1=1
        <if test="param.id!= null and param.id!='' ">
        	AND t.id=#{param.id}
       </if>

       order by t.createTime desc
    </select>
    <select id="count"  resultType="int" parameterType="Overtime">
       SELECT count(*) FROM OA_OVERTIME t WHERE 1=1 
    </select>
 	<insert id="insert"  parameterType="Overtime">
 	<![CDATA[
	INSERT INTO OA_OVERTIME(
	id, account_id, name, 
      copyto, approver, startTime, 
      endTime, duration, reason, 
      pId, createTime, updateTime,unit
	) VALUES (
	#{id,jdbcType=VARCHAR}, #{accountId,jdbcType=VARCHAR}, #{name,jdbcType=VARCHAR}, 
      #{copyto,jdbcType=VARCHAR}, #{approver,jdbcType=VARCHAR}, #{starttime,jdbcType=TIMESTAMP}, 
      #{endtime,jdbcType=TIMESTAMP}, #{duration,jdbcType=VARCHAR}, #{reason,jdbcType=VARCHAR}, 
      #{pid,jdbcType=VARCHAR}, #{createtime,jdbcType=TIMESTAMP}, #{updatetime,jdbcType=TIMESTAMP},
      #{unit}
	)
	]]>
	</insert>
	<delete id="delete" parameterType="Overtime">
	DELETE FROM OA_OVERTIME  WHERE 1=1 
	AND id=#{id} 
	</delete>
	<delete id="deleteBatch" parameterType="java.util.List">
	DELETE FROM OA_OVERTIME
	WHERE id IN(
		<foreach item="o" collection="list" open="" separator="," close="" >
			#{o.id}
		</foreach>
		)
	</delete>
	<update id="update" parameterType="Overtime">
		UPDATE OA_OVERTIME 
		SET 
		 account_id = #{accountId,jdbcType=VARCHAR},
      name = #{name,jdbcType=VARCHAR},
      copyto = #{copyto,jdbcType=VARCHAR},
      approver = #{approver,jdbcType=VARCHAR},
      startTime = #{starttime,jdbcType=TIMESTAMP},
      endTime = #{endtime,jdbcType=TIMESTAMP},
      duration = #{duration,jdbcType=VARCHAR},
      reason = #{reason,jdbcType=VARCHAR},
      pId = #{pid,jdbcType=VARCHAR},
      createTime = #{createtime,jdbcType=TIMESTAMP},
      updateTime = #{updatetime,jdbcType=TIMESTAMP},
      unit=#{unit}
		WHERE 
			id=#{id}
	</update>
</mapper>