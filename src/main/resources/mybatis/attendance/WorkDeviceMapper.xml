<?xml version="1.0" encoding="UTF-8"?>
<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN" "http://mybatis.org/dtd/mybatis-3-mapper.dtd">
<mapper namespace="com.jy.repository.attendance.WorkDeviceDao">
    <!--  com.jy.entity.attendance.WorkDevice -->
    <resultMap id="base" type="WorkDevice"></resultMap>
    <select id="find" resultMap="base" parameterType="WorkDevice">
        SELECT t.* FROM JY_WORK_DEVICE t WHERE 1=1
        <if test="id != null and id!='' ">AND t.id=#{id}</if>
        <if test="name != null and name!='' ">AND t.name LIKE CONCAT('%',#{param.name},'%')</if>
    </select>
    <select id="findByPage" resultMap="base" parameterType="WorkDevice">
        SELECT t.id,
        t.type,
        t.name,
        t.belongto FROM JY_WORK_DEVICE t
        WHERE 1=1
        <if test="param.name != null and param.name!='' ">
            AND t.name LIKE CONCAT('%',#{param.name},'%')
        </if>

        <if test="param.keyWord!=null and param.keyWord!='' ">
            AND t.name LIKE CONCAT('%',#{param.keyWord},'%')
        </if>

        ORDER BY t.name desc
    </select>
    <select id="count" resultType="int" parameterType="WorkDevice">
        SELECT count(*)
        FROM JY_WORK_DEVICE t
        WHERE 1 = 1
    </select>
    <insert id="insert" parameterType="WorkDevice">
    <![CDATA[
        INSERT INTO JY_WORK_DEVICE (
            id, type, name, belongto
        ) VALUES (#{id,jdbcType=VARCHAR}, #{type,jdbcType=CHAR}, #{name,jdbcType=VARCHAR},
                  #{belongto,jdbcType=VARCHAR})
        ]]>
  </insert>
    <delete id="delete" parameterType="WorkDevice">DELETE FROM JY_WORK_DEVICE
    WHERE 1 = 1 AND id = #{id}</delete>
    <delete id="deleteBatch" parameterType="java.util.List">
        DELETE FROM JY_WORK_DEVICE WHERE id IN(
        <foreach item="o" collection="list" open="" separator="," close="">#{o.id}</foreach>
        )
    </delete>
    <update id="update" parameterType="WorkDevice">
        UPDATE JY_WORK_DEVICE
        SET
            type     = #{record.type,jdbcType=CHAR},
            name     = #{record.name,jdbcType=VARCHAR},
            belongto = #{record.belongto,jdbcType=VARCHAR}
        WHERE id = #{id}
    </update>


</mapper>