<?xml version="1.0" encoding="UTF-8"?>
<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN" "http://mybatis.org/dtd/mybatis-3-mapper.dtd">
<mapper namespace="com.jy.repository.system.account.AccountDao">
    <!--  com.jy.entity.system.account.Account -->
    <resultMap id="base" type="BaseAccount">
        <id column="ID" jdbcType="VARCHAR" property="accountId"/>
        <association property="loginLog" column="ID" javaType="LoginLog" select="getLoginLogById"/>
        <collection property="poss" column="ID" ofType="basePos" select="getPoss"/>
    </resultMap>
    <resultMap id="LoginLog" type="LoginLog"></resultMap>
    <resultMap id="ZNodes" type="com.jy.common.utils.tree.entity.ZNodes"></resultMap>
    <resultMap id="basePos" type="BasePos"></resultMap>
    <!-- 防止密码外泄，取消密码列 -->
    <select id="find" resultMap="base" parameterType="BaseAccount">
        SELECT t.id,
        t.loginName,
        t.roleId,
        jbr.name as roleName,
        t.name,
        t.department,
        t.orgid,
        t.picUrl,
        t.email,
        t.isValid,
        t.createTime,
        t.updateTime,
        t.skin,
        t.description
        FROM JY_BASE_ACCOUNT t
        LEFT JOIN JY_BASE_ROLE jbr
        ON jbr.id=t.roleId
        WHERE 1=1
        <if test="loginName != null and loginName!='' ">
            and t.loginName=#{loginName}
        </if>
        <if test="accountId != null ">
            and t.id=#{accountId}
        </if>
        <if test="company != null and company!=''">
            AND t.cid=#{company}
        </if>
    </select>
    <!--  防止密码外泄，取消密码列 -->
    <select id="findByPage" resultMap="base" parameterType="BaseAccount">
        SELECT t.id,
        t.loginName,
        t.roleId,
        jbr.name as roleName,
        t.name,
        t.picUrl,
        t.email,
        t.orgid,
        t.department,
        t.isValid,
        t.createTime,
        t.updateTime,
        t.skin,
        t.description FROM JY_BASE_ACCOUNT t
        LEFT JOIN JY_BASE_ROLE jbr
        ON jbr.id=t.roleId
        WHERE 1=1
        <if test="param.loginName != null and param.loginName!='' ">
            AND t.loginName LIKE CONCAT('%',#{param.loginName},'%')
        </if>
        <if test="param.keyWord!= null">
            AND (
            t.loginName LIKE CONCAT('%',#{param.keyWord},'%')
            OR t.name LIKE CONCAT('%',#{param.keyWord},'%')
            OR t.email LIKE CONCAT('%',#{param.keyWord},'%')
            )
        </if>
        <if test="param.roleId != null ">
            AND t.roleId=#{param.roleId}
        </if>
        <if test="param.company != null and param.company!=''">
            AND t.cid=#{param.company}
        </if>
        <if test="param.isValid != null ">
            AND t.isValid=#{param.isValid}
        </if>
        ORDER BY t.createTime desc
    </select>
    <select id="count" resultType="int" parameterType="BaseAccount">
       SELECT count(*) FROM JY_BASE_ACCOUNT t  WHERE 1=1 
    </select>
    <insert id="insert" parameterType="BaseAccount">
 	<![CDATA[

	INSERT INTO JY_BASE_ACCOUNT(
	id,loginName,name,password,salt,roleId,skin,email,isValid,createTime,description,cid,department,orgid
	) VALUES (#{accountId},#{loginName},#{name},#{password},#{salt},#{roleId},#{skin},
	#{email},#{isValid},#{createTime},#{description},#{company},#{department},#{orgid}
	)

        ]]>
	</insert>
    <delete id="delete" parameterType="BaseAccount">
	delete from JY_BASE_ACCOUNT  
	WHERE id=#{accountId}
	</delete>
    <delete id="deleteBatch" parameterType="java.util.List">
        DELETE FROM JY_BASE_ACCOUNT WHERE id in(
        <foreach item="o" collection="list" open="" separator="," close="">
            #{o.accountId}
        </foreach>
        )
    </delete>
    <update id="update" parameterType="BaseAccount">
		UPDATE JY_BASE_ACCOUNT 
		SET name =#{name},
			email =#{email},
			isValid =#{isValid},
			roleId =#{roleId},
			updateTime =#{updateTime},
			description =#{description},
			department=#{department},
			orgid=#{orgid}
		WHERE id=#{accountId}
	</update>
    <!-- 这方法能获取密码和盐 -->
    <select id="findFormatByLoginName" resultMap="base" parameterType="String">
    	<![CDATA[

       SELECT a.* FROM JY_BASE_ACCOUNT a WHERE a.isvalid='1'
       AND a.loginname=#{loginName,jdbcType=VARCHAR}

        ]]>
    </select>

    <select id="findFormatByLoginNameAndCompany" resultMap="base" parameterType="String">
		<![CDATA[

       SELECT a.* FROM JY_BASE_ACCOUNT a WHERE a.isvalid='1'
       AND a.loginname=#{loginName,jdbcType=VARCHAR}
       AND a.cid = #{company,jdbcType=VARCHAR}

        ]]>
	</select>
    <!-- 这方法不能能获取密码和盐 -->
    <select id="findAccountById" resultMap="base" parameterType="String">
       SELECT  t.id,
       		  t.loginName,
       		  t.roleId,
       		  jbr.name as roleName,
       		  t.name,
       		  t.picUrl,
       		  t.email,
       		  t.isValid,
       		  t.createTime,
       		  t.updateTime,
       		  t.skin,
       		  t.department,
       		  t.description 
       	FROM JY_BASE_ACCOUNT t 
       	LEFT JOIN JY_BASE_ROLE jbr
        ON jbr.id=t.roleId 
        WHERE t.accountId=#{accountId}
    </select>
    <update id="setSetting" parameterType="BaseAccount">
		UPDATE JY_BASE_ACCOUNT 
		SET   skin =#{skin}
		WHERE id=#{accountId}
	</update>
    <select id="getPerData" resultMap="base" parameterType="String">
		   SELECT t.id,
		   	  t.loginName,
       		  t.roleId,
       		  t.picUrl,
       		  t.name,
       		  t.email,
       		  		  t.department,
       		  t.createTime,
       		  t.updateTime,
       		  t.description,
       		  jbr.name as roleName
       		  FROM JY_BASE_ACCOUNT t 
       	   LEFT JOIN  JY_BASE_ROLE jbr
       	   ON jbr.id=t.roleId
       	   WHERE t.isValid=1 and t.id=#{accountId} 
	</select>
    <update id="setPerData" parameterType="BaseAccount">
		UPDATE JY_BASE_ACCOUNT 
		SET   name =#{name},
			  email =#{email},
			  updateTime =#{updateTime}
		WHERE id=#{accountId}
	</update>
    <update id="setHeadpic" parameterType="BaseAccount">
		UPDATE JY_BASE_ACCOUNT 
		SET   picUrl =#{picUrl},
			  updateTime =#{updateTime}
		WHERE id=#{accountId}
	</update>
    <select id="getRoles" resultMap="ZNodes">
		SELECT jbo.id,
			   jbo.pId,
			   jbo.name,
			   'o' as other 
		FROM JY_BASE_ORG jbo
		UNION ALL 
		SELECT CONCAT('role',jbr.id) as id,
			   jbr.orgId as pId,
			   jbr.name,
			   'r' as other 
		FROM JY_BASE_ROLE jbr
	</select>
    <select id="getCompanyRoles" resultMap="ZNodes" parameterType="string">
		SELECT jbo.id,
		jbo.pId,
		jbo.name,
		'/whale/static/plugins/zTree/3.5/img/diy/group.png' as icon,
		'o' as other
		FROM JY_BASE_ORG jbo where jbo.cid=#{company}
		UNION ALL
		SELECT CONCAT('role',jbr.id) as id,
		jbr.orgId as pId,
		jbr.name,
		'/whale/static/plugins/zTree/3.5/img/diy/user.png' as icon,
		'r' as other
		FROM JY_BASE_ROLE jbr where jbr.cid=#{company}
	</select>

    <select id="getSingleRoles" resultMap="ZNodes" parameterType="string">
        SELECT CONCAT('role',jbr.id) as id,
        jbr.orgId as pId,
        jbr.name,
        '/whale/static/plugins/zTree/3.5/img/diy/user.png' as icon,
        'r' as other
        FROM JY_BASE_ROLE jbr where jbr.cid=#{company}
    </select>
    <select id="findCountByLoginName" resultType="int">
       SELECT COUNT(*)
       		  FROM JY_BASE_ACCOUNT t 
       WHERE  t.loginName=#{loginName}
    </select>

    <select id="findCountByLoginNameAndCompany" resultType="int">
		SELECT COUNT(*)
		FROM JY_BASE_ACCOUNT t
		WHERE  t.loginName=#{loginName} AND t.cid=#{company}
	</select>

    <update id="resetPwd" parameterType="BaseAccount">
		UPDATE JY_BASE_ACCOUNT 
		SET   password =#{password},
			  salt =#{salt}
		WHERE id=#{accountId}
	</update>

    <select id="getLoginLogById" parameterType="string" resultMap="LoginLog">
	SELECT
    t.loginTime, t.loginIP FROM JY_BASE_LOGIN_LOG t WHERE t.accountId = #{ID}  ORDER BY t.loginTime DESC LIMIT 1 ;
	</select>
    <select id="getPoss" parameterType="string" resultMap="basePos">
	  SELECT jbp.* FROM JY_BASE_ACCOUNT_POSITION jbap 
	  LEFT JOIN JY_BASE_POSITION jbp
	  ON jbp.id=jbap.posId
	  WHERE jbap.accountId=#{ID}      
	  ORDER BY jbap.posId
    </select>
</mapper>